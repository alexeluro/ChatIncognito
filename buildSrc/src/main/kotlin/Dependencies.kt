object Config {
    const val min_sdk = 21
    const val target_sdk = 31
    const val build_tools = "30.0.3"
    val java_version = 1.8
}

object Versions {
    // <editor-fold desc="tools">

    const val activity_ktx = "1.2.1"
    const val androidx_appcompat = "1.3.1"

    const val androidx_arch_test = "2.1.0"

    const val androidx_constraintlayout = "2.1.0"
    const val androidx_core = "1.6.0"
    const val androidx_junit = "1.1.3"
    const val androidx_legacy = "1.0.0"
    const val androidx_lifecycle = "2.3.1"
    const val androidx_navigation = "2.3.5"
    const val androidx_preferences = "1.1.1"
    const val androidx_recyclerview = "1.2.0"
    const val androidx_test = "1.4.0"
    const val androidx_test_core = "1.4.0"
    const val androidx_test_rule = "1.4.0"
    const val androidx_test_runner = "1.4.0"
    const val coil = "0.8.0"
    const val core_lib_desugaring = "1.1.5"
    const val coroutines = "1.5.1"
    const val crashlytics_plugin = "2.2.0"
    const val dagger = "2.38.1"
    const val dagger_hilt = "2.38.1"
    const val dagger_hilt_navigation = "1.0.0"
    const val dagger_hilt_work = "1.0.0"
    const val espresso = "3.2.0"
    const val firebase_analytics = "18.0.3"
    const val flow_turbine = "0.4.1"
    const val flowbinding = "0.12.0"

    const val fragment = "1.3.1"
    const val glide = "4.12.0"
    const val google_crashlytics = "17.4.1"
    const val google_play_core = "1.10.0"
    const val google_services = "4.3.3"
    const val gradleandroid = "4.1.2"
    const val gradleversions = "0.27.0"
    const val gridlayout = "1.0.0"
    const val gson = "2.8.6"
    const val journeyapps_zxing = "4.2.0"
    const val junit = "4.13.2"

    const val kotlin = "1.5.21"
    const val ktlint = "0.42.1"
    const val ktx_serializer = "1.2.2"
    const val leak_canary = "2.7"
    const val livedata_combine_tuple = "1.2.1"
    const val livedata_validateby = "2.1.0"
    const val livedata_testing = "1.2.0"
    const val material_components = "1.4.0"
    const val mockito_extension = "3.0.0"
    const val mockito_inline = "3.0.0"
    const val mockito_kotlin = "2.2.0"
    const val moshi: String = "1.12.0"
    const val mp_android_chart: String = "v3.1.0"
    const val okhttp = "4.9.0"
    const val paging = "3.0.1"
    const val phonenumber_utils = "8.12.30"
    const val play_services_location = "17.0.0"
    const val retrofit = "2.9.0"
    const val robolectric = "4.6.1"
    const val room = "2.3.0"
    const val savedstate = "1.0.0"
    const val speed_dial = "3.1.1"
    const val timber = "5.0.1"
    const val work_manager = "2.5.0"
    const val zxing_core = "3.3.0"
    const val u_crop = "2.2.7"
    const val u_crop_native = "2.2.7-native"
    // </editor-fold>

}

object Libs {
    const val android_room = "androidx.room:room-ktx:${Versions.room}"
    const val android_room_compiler = "androidx.room:room-compiler:${Versions.room}"
    const val android_room_runtime = "androidx.room:room-runtime:${Versions.room}"
    const val android_room_testing = "androidx.room:room-testing:${Versions.room}"
    const val androidx_activity_ktx = "androidx.activity:activity-ktx:${Versions.activity_ktx}"
    const val androidx_appcompat = "androidx.appcompat:appcompat:${Versions.androidx_appcompat}"
    const val androidx_arch_test = "androidx.arch.core:core-testing:${Versions.androidx_arch_test}"
    const val androidx_constraintlayout = "androidx.constraintlayout:constraintlayout:${Versions.androidx_constraintlayout}"
    const val androidx_core = "androidx.core:core-ktx:${Versions.androidx_core}"
    const val androidx_fragment_ktx = "androidx.fragment:fragment-ktx:${Versions.fragment}"
    const val androidx_gridlayout = "androidx.gridlayout:gridlayout:${Versions.gridlayout}"
    const val androidx_junit = "androidx.test.ext:junit:${Versions.androidx_junit}"
    const val androidx_legacy = "androidx.legacy:legacy-support-v4:${Versions.androidx_legacy}"
    const val androidx_lifecycle_runtime = "androidx.lifecycle:lifecycle-runtime-ktx:${Versions.androidx_lifecycle}"
    const val androidx_livedata = "androidx.lifecycle:lifecycle-livedata-ktx:${Versions.androidx_lifecycle}"
    const val androidx_navigation_frag = "androidx.navigation:navigation-fragment-ktx:${Versions.androidx_navigation}"
    const val androidx_navigation_ui = "androidx.navigation:navigation-ui-ktx:${Versions.androidx_navigation}"
    const val androidx_recyclerview = "androidx.recyclerview:recyclerview:${Versions.androidx_recyclerview}"
    const val androidx_savedstate = "androidx.lifecycle:lifecycle-viewmodel-savedstate:${Versions.androidx_lifecycle}"
    const val androidx_test = "androidx.test:core:${Versions.androidx_test}"
    const val androidx_test_core = "androidx.test:core-ktx:${Versions.androidx_test_core}"
    const val androidx_test_runner = "androidx.test:runner:${Versions.androidx_test_runner}"
    const val androidx_test_rules = "androidx.test:rules:${Versions.androidx_test_runner}"
    const val androidx_viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.androidx_lifecycle}"
    const val barcode_journeyapps_zxing = "com.journeyapps:zxing-android-embedded:${Versions.journeyapps_zxing}"
    const val bouncy_castle = "org.bouncycastle:bcprov-jdk15on:1.60"
    const val coil = "io.coil-kt:coil:${Versions.coil}"
    const val core_library_desugaring = "com.android.tools:desugar_jdk_libs:${Versions.core_lib_desugaring}"
    const val coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.coroutines}"
    const val coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.coroutines}"
    const val coroutines_test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.coroutines}"
    const val dagger = "com.google.dagger:dagger:${Versions.dagger}"
    const val dagger_compiler = "com.google.dagger:dagger-compiler:${Versions.dagger}"
    const val dagger_hilt_android = "com.google.dagger:hilt-android:${Versions.dagger_hilt}"
    const val dagger_hilt_compiler = "com.google.dagger:hilt-compiler:${Versions.dagger_hilt}"
    const val dagger_hilt_navigation_fragment = "androidx.hilt:hilt-navigation-fragment:${Versions.dagger_hilt_navigation}"
    const val dagger_hilt_work = "androidx.hilt:hilt-work:${Versions.dagger_hilt_work}"
    const val dagger_hilt_work_compiler = "androidx.hilt:hilt-compiler:${Versions.dagger_hilt_work}"
    const val dagger_hilt_android_test = "com.google.dagger:hilt-android-testing:${Versions.dagger_hilt}"
    const val espresso_contrib = "androidx.test.espresso:espresso-contrib:${Versions.espresso}"
    const val espresso_core = "androidx.test.espresso:espresso-core:${Versions.espresso}"
    const val espresso_intents = "androidx.test.espresso:espresso-intents:${Versions.espresso}"
    const val firebase_analytics = "com.google.firebase:firebase-analytics-ktx:${Versions.firebase_analytics}"
    const val flowbinding = "io.github.reactivecircus.flowbinding:flowbinding-android:${Versions.flowbinding}"
    const val flowbinding_appcompat = "io.github.reactivecircus.flowbinding:flowbinding-appcompat:${Versions.flowbinding}"
    const val flowbinding_core = "io.github.reactivecircus.flowbinding:flowbinding-core:${Versions.flowbinding}"
    const val flowbinding_navigation = "io.github.reactivecircus.flowbinding:flowbinding-navigation:${Versions.flowbinding}"

    const val fragment_testing = "androidx.fragment:fragment-testing:${Versions.fragment}"
    const val glide = "com.github.bumptech.glide:glide:${Versions.glide}"
    const val glide_compiler = "com.github.bumptech.glide:compiler:${Versions.glide}"
    const val google_crashlytics = "com.google.firebase:firebase-crashlytics:${Versions.google_crashlytics}"
    const val google_play_core = "com.google.android.play:core:${Versions.google_play_core}"
    const val gson = "com.google.code.gson:gson:${Versions.gson}"
    const val junit = "junit:junit:${Versions.junit}"
    const val kotlin_stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${Versions.kotlin}"
    const val leak_canary = "com.squareup.leakcanary:leakcanary-android:${Versions.leak_canary}"
    const val livedata_combine_tuple = "com.github.Zhuinden:livedata-combinetuple-kt:${Versions.livedata_combine_tuple}"
    const val livedata_validateby = "com.github.Zhuinden:livedata-validateby-kt:${Versions.livedata_validateby}"
    const val material_components = "com.google.android.material:material:${Versions.material_components}"
    const val mockito_extension = "org.mockito:mockito-junit-jupiter:${Versions.mockito_extension}"
    const val mockito_inline = "org.mockito:mockito-inline:${Versions.mockito_inline}"
    const val mockito_kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:${Versions.mockito_kotlin}"
    const val moshi = "com.squareup.moshi:moshi:${Versions.moshi}"
    const val moshi_adapters = "com.squareup.moshi:moshi-adapters:${Versions.moshi}"
    const val moshi_codegen = "com.squareup.moshi:moshi-kotlin-codegen:${Versions.moshi}"
    const val mp_android_chart = "com.github.PhilJay:MPAndroidChart:${Versions.mp_android_chart}"
    const val okhttp = "com.squareup.okhttp3:okhttp:${Versions.okhttp}"
    const val okhttp_logging = "com.squareup.okhttp3:logging-interceptor:${Versions.okhttp}"
    const val okhttp_mockwebserver = "com.squareup.okhttp3:mockwebserver:${Versions.okhttp}"
    const val okhttp_tls = "com.squareup.okhttp3:okhttp-tls:${Versions.okhttp}"
    const val paging3 = "androidx.paging:paging-runtime:${Versions.paging}"
    const val paging3_for_test = "androidx.paging:paging-common:${Versions.paging}"
    const val phonenumber_utils = "com.googlecode.libphonenumber:libphonenumber:${Versions.phonenumber_utils}"
    const val play_services_location = "com.google.android.gms:play-services-location:${Versions.play_services_location}"
    const val plugins_google_crashlytics = "com.google.firebase:firebase-crashlytics-gradle:${Versions.crashlytics_plugin}"
    const val plugins_google_services = "com.google.gms:google-services:${Versions.google_services}"
    const val plugins_dagger_hilt = "com.google.dagger:hilt-android-gradle-plugin:${Versions.dagger_hilt}"
    const val preference = "androidx.preference:preference:${Versions.androidx_preferences}"
    const val retrofit = "com.squareup.retrofit2:retrofit:${Versions.retrofit}"
    const val retrofit_moshi = "com.squareup.retrofit2:converter-moshi:${Versions.retrofit}"
    const val robolectric = "org.robolectric:robolectric:${Versions.robolectric}"
    const val speed_dial = "com.github.leinardi:FloatingActionButtonSpeedDial:${Versions.speed_dial}" // https://github.com/leinardi/FloatingActionButtonSpeedDial
    const val timber = "com.jakewharton.timber:timber:${Versions.timber}"
    const val tools_gradleandroid = "com.android.tools.build:gradle:${Versions.gradleandroid}"
    const val tools_gradleversions = "com.github.ben-manes:gradle-versions-plugin:${Versions.gradleversions}"
    const val tools_kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
    const val tools_navigation_safe_args = "androidx.navigation:navigation-safe-args-gradle-plugin:${Versions.androidx_navigation}"
    const val test_flow_turbine = "app.cash.turbine:turbine:${Versions.flow_turbine}"
    const val u_crop_native = "com.github.yalantis:ucrop:${Versions.u_crop_native}"
    const val u_crop = "com.github.yalantis:ucrop:${Versions.u_crop}"
    const val work_manager = "androidx.work:work-runtime-ktx:${Versions.work_manager}"
    const val work_manager_testing = "androidx.work:work-testing:${Versions.work_manager}"
    const val zxing_core = "com.google.zxing:core:${Versions.zxing_core}"
    const val ktx_serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:${Versions.ktx_serializer}"

    const val livedata_testing = "com.jraska.livedata:testing-ktx:${Versions.livedata_testing}"

}
